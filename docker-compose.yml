version: '3.8'

services:
  # Databases
  mongodb:
    image: mongo:7.0
    container_name: dumdoors-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-dumdoors}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./database/mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - dumdoors-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  neo4j:
    image: neo4j:5.15
    container_name: dumdoors-neo4j
    restart: unless-stopped
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-password}
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 512m
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_conf:/conf
      - ./database/neo4j-init:/import:ro
    networks:
      - dumdoors-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USERNAME:-neo4j}", "-p", "${NEO4J_PASSWORD:-password}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7.2-alpine
    container_name: dumdoors-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-password} --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - redis_conf:/usr/local/etc/redis
    networks:
      - dumdoors-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Application Services
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    container_name: dumdoors-backend
    restart: unless-stopped
    environment:
      - PORT=${BACKEND_PORT:-8080}
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-dumdoors}?authSource=admin
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - REDIS_URI=redis://:${REDIS_PASSWORD:-password}@redis:6379
      - AI_SERVICE_URL=http://ai-service:8000
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - DEVVIT_SUBREDDIT=${DEVVIT_SUBREDDIT}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - GIN_MODE=${GIN_MODE:-release}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      ai-service:
        condition: service_started
    networks:
      - dumdoors-network
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    container_name: dumdoors-ai-service
    restart: unless-stopped
    environment:
      - PORT=${AI_SERVICE_PORT:-8000}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - AI_MODEL_PROVIDER=${AI_MODEL_PROVIDER:-openai}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PYTHONPATH=/app
    ports:
      - "${AI_SERVICE_PORT:-8000}:8000"
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - dumdoors-network
    volumes:
      - ai_service_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_conf:
    driver: local
  redis_data:
    driver: local
  redis_conf:
    driver: local
  backend_logs:
    driver: local
  ai_service_logs:
    driver: local

networks:
  dumdoors-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16